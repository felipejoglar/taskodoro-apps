name: Android CI

on:
  push:
    branches: [ main ]
    paths:
      - .github/workflows/android_ci.yml
      - apps/android
      - taskodoro
      - build.gradle.kts
      - settings.gradle.kts
  pull_request:
    types: [ opened, synchronize, ready_for_review, reopened ]
    branches: [ main ]
    paths:
      - .github/workflows/android_ci.yml
      - apps/android
      - taskodoro
      - build.gradle.kts
      - settings.gradle.kts

concurrency:
  group: android-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup

      - name: Build
        run: ./gradlew apps:android:app:clean apps:android:app:assemble

  unit-tests:
    name: Unit Tests
    needs: [ build ]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup

      - name: Run Unit tests
        run: ./gradlew apps:android:app:clean apps:android:app:test

  ui-tests:
    name: UI Tests
    needs: [ unit-tests ]
    runs-on: macos-latest
    timeout-minutes: 20

    strategy:
      fail-fast: true
      matrix:
        api-level: [ 26, 31 ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Gradle
        uses: ./.github/actions/gradle-setup

      - name: Get AVD info
        uses: ./.github/actions/get-avd-info
        id: avd-info
        with:
          api-level: ${{ matrix.api-level }}

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ runner.os }}-avd-${{ steps.avd-info.outputs.arch }}-${{ steps.avd-info.outputs.target }}-${{ matrix.api-level }}

      # Create a new emulator snapshot if it isn't present in the cache.
      - name: Create AVD snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ steps.avd-info.outputs.arch }}
          target: ${{ steps.avd-info.outputs.target }}
          disable-animations: false
          force-avd-creation: false
          ram-size: 4096M
          emulator-boot-timeout: 12000
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot."

      - name: Run Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ steps.avd-info.outputs.arch }}
          target: ${{ steps.avd-info.outputs.target }}
          disable-animations: true
          force-avd-creation: false
          ram-size: 4096M
          emulator-boot-timeout: 12000
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          script: ./gradlew apps:android:app:clean apps:android:app:connectedAndroidTest